// <auto-generated />
using BibliotecaW.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BibliotecaW.Data.Migrations
{
    [DbContext(typeof(BibliotecaDbContext))]
    [Migration("20250425140931_libroAutor")]
    partial class libroAutor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca.Data.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Feccha_nacimiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("Biblioteca.Data.Models.LibroAutor", b =>
                {
                    b.Property<int>("LibroId")
                        .HasColumnType("integer");

                    b.Property<int>("AutorId")
                        .HasColumnType("integer");

                    b.HasKey("LibroId", "AutorId");

                    b.HasIndex("AutorId");

                    b.ToTable("LibroAutor");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Libros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("fecha_Lanzamiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.LibroAutor", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.Autor", "Autor")
                        .WithMany("LibroAutors")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Data.Models.Libros", "Libro")
                        .WithMany("LibroAutors")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Autor", b =>
                {
                    b.Navigation("LibroAutors");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Libros", b =>
                {
                    b.Navigation("LibroAutors");
                });
#pragma warning restore 612, 618
        }
    }
}
